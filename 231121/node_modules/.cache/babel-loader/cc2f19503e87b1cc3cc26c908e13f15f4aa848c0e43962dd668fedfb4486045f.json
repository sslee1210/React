{"ast":null,"code":"var _jsxFileName = \"C:\\\\lss\\\\git\\\\React\\\\231121\\\\src\\\\components\\\\UseRef2.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseRef2 = () => {\n  _s();\n  const [count, setCount] = useState(1);\n  // 특정 값을 저장하기 위해 사용. 특정 값이 변경되어도 렌더링이 일어나지 않음. 즉 렌더링을 하고 싶지 않을 때 사용\n  const countRef = useRef(1);\n  console.log(\"렌더링 + 1\");\n  const incrementState = () => setCount(count + 1);\n  const incrementRef = () => {\n    countRef.current = countRef.current + 1;\n    console.log(countRef.current);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"borderTop\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"useRef2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"useState : \", count, \" / useRef : \", countRef.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementState,\n      children: \"useState()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementRef,\n      children: \"useRef()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(UseRef2, \"9/7DUqBa0h+N2i6m0jj2I/z6cNk=\");\n_c = UseRef2;\nexport default UseRef2;\nvar _c;\n$RefreshReg$(_c, \"UseRef2\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","UseRef2","_s","count","setCount","countRef","console","log","incrementState","incrementRef","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/lss/git/React/231121/src/components/UseRef2.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n\r\nconst UseRef2 = () => {\r\n  const [count, setCount] = useState(1);\r\n  // 특정 값을 저장하기 위해 사용. 특정 값이 변경되어도 렌더링이 일어나지 않음. 즉 렌더링을 하고 싶지 않을 때 사용\r\n  const countRef = useRef(1);\r\n\r\n  console.log(\"렌더링 + 1\");\r\n\r\n  const incrementState = () => setCount(count + 1);\r\n\r\n  const incrementRef = () => {\r\n    countRef.current = countRef.current + 1;\r\n    console.log(countRef.current);\r\n  };\r\n\r\n  return (\r\n    <div className=\"borderTop\">\r\n      <h2>useRef2</h2>\r\n      <h3>\r\n        useState : {count} / useRef : {countRef.current}\r\n      </h3>\r\n      <button onClick={incrementState}>useState()</button>\r\n      <button onClick={incrementRef}>useRef()</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UseRef2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC;EACA,MAAMO,QAAQ,GAAGR,MAAM,CAAC,CAAC,CAAC;EAE1BS,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EAEtB,MAAMC,cAAc,GAAGA,CAAA,KAAMJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EAEhD,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBJ,QAAQ,CAACK,OAAO,GAAGL,QAAQ,CAACK,OAAO,GAAG,CAAC;IACvCJ,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACK,OAAO,CAAC;EAC/B,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBZ,OAAA;MAAAY,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBhB,OAAA;MAAAY,QAAA,GAAI,aACS,EAACT,KAAK,EAAC,cAAY,EAACE,QAAQ,CAACK,OAAO;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACLhB,OAAA;MAAQiB,OAAO,EAAET,cAAe;MAAAI,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpDhB,OAAA;MAAQiB,OAAO,EAAER,YAAa;MAAAG,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACd,EAAA,CAxBID,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}